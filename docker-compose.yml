# ./docker-compose.yml
# Docker Compose configuration for FastAPI application with PostgreSQL and Redis


services:
# Service to run database migrations
  migrate:
    build:
      context: .
      dockerfile: ./docker_dir/Dockerfile
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_ALEMBIC_URL: ${POSTGRES_ALEMBIC_URL}
    working_dir: /app
    command: >
      sh -c "
      alembic upgrade head
      "
    restart: "no"

# FastAPI application service
  api:
    build:
      context: .
      dockerfile: ./docker_dir/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    env_file:
      - .env.prod
    working_dir: /app
    ports:
        - "8002:8002"   # FastAPI
        - "8003:8003"   # Metrics
    command: uvicorn src.main:app --host 0.0.0.0 --port 8002 --reload
    volumes: [".:/app"]
    restart: unless-stopped

# Redis service
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]

# PostgreSQL service
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "55432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 20
    restart: unless-stopped

volumes:
  postgres_data:
